name: CI - Build and Test API

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4

    - name: Configurar .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restaurar pacotes
      run: dotnet restore GamePlatform.sln

    - name: Build
      run: dotnet build GamePlatform.sln --configuration Release --no-restore

    - name: Testes
      run: dotnet test GamePlatform.Tests/GamePlatform.Tests.csproj --no-build --verbosity normal

    - name: Build Docker
      run: docker-compose -f docker-compose.yml build
 
    # - name: Login no DockerHub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    # 
    # - name: Tag e push da imagem
    #   run: |
    #     docker tag gameplatform-api yourdockeruser/gameplatform-api:latest
    #     docker push yourdockeruser/gameplatform-api:latest